services:

  user-service:
    build: ./user-service
    container_name: user-service
    networks:
      - postgres_network
      - kafka-network
    depends_on:
      - db
      - eureka-server
      - api-gateway
      - kafka
  
  task-service:
    build: ./task-service
    container_name: task-service
    networks:
      - postgres_network
      - kafka-network
    depends_on:
      - db
      - eureka-server
      - api-gateway
      - kafka


  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8765:8765"
    networks:
      - postgres_network
      - kafka-network
    depends_on:
      - eureka-server

  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - postgres_network
      - kafka-network

  db:
    image: postgres:16.4
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 111
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres_network

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    networks:
      - kafka-network
    depends_on:
      - zookeeper

networks:
  postgres_network:
  kafka-network:

volumes:
  postgres_data:
